import * as potato from '@po-to/potato-node';
import * as app from 'node/app';

export class Controller extends potato.Controller {
    __args_Item(data: any): {} {
        return {};
    }
    Item(request: potato.Request, args: any, resolve: (data: any) => void, reject: (error: Error) => void) {
        let core:app.Core = request.getCore() as app.Core;
        resolve(new potato.AMD([
            "ejs",
            "static/mod_header/index.html",
            {
                homeLink: core.modToRealUrl(request, 'articles/home','page'),
                listLink: core.modToRealUrl(request, 'articles/list','page'),
                exampleLink: core.modToRealUrl(request, 'articles/example','page'),
                buildLink: core.modToRealUrl(request, 'articles/build','page'),
                vid : request.toUrl(true)
            }
        ], function (renderer,tpl,data):string {
            return renderer.render(tpl,data);
        }));
    }
}
export let instance: Controller = new Controller();