import * as potato from '@po-to/potato-node';
import * as app from 'node/app';

function urlToRequest(url:string, request):string|potato.Request{
    if(url.startsWith("`$$SITEURL`/")){
        let arr = url.replace('`$$SITEURL`/','').split("?");
        return new potato.Request(request, arr[0],'Item');
    }else{
        return url;
    }
}

export class Controller extends potato.Controller {
    __args_Item(data: any): {} {
        return data;
    }
    Item(request: potato.Request, args: any, resolve: (data: any) => void, reject: (error: Error) => void) {
        let core = request.getCore();
        let routing = core.routing(request.path.replace(/-/g,'/'), 'GET', request.args);
        if(routing){
            let contentReq = new potato.Request(request, routing.controller, routing.action, routing.path, routing.args);
            core.executeRequestToData<string>(contentReq,false,false).then((moduleContent)=>{
                let arr = moduleContent.trim().match(/^<[^<]+<script [^>]+["']text\/config["'].*?>([\s\S]*?)<\/script>/);
                let moduleData:app.IModConfig = {};
                if(arr){
                    moduleData = JSON.parse(arr[1])
                }
                resolve(new potato.AMD([
                    "ejs",
                    "static/mod_page/index.html",
                    moduleData.header?urlToRequest(moduleData.header,request):new potato.Request(request,'header','Item'),
                    moduleData.banner?urlToRequest(moduleData.banner,request):new potato.Request(request,'banners/home','Item'),
                    moduleData.nav?urlToRequest(moduleData.nav,request):new potato.Request(request,'navs/home','Item'),
                    moduleData.footer?urlToRequest(moduleData.footer,request):new potato.Request(request,'footer','Item'),
                    {
                        content:moduleContent,
                        title:moduleData.title || 'title',
                        keywords:moduleData.keywords || 'aaa',
                        description:moduleData.description || 'bbb',
                        config: moduleData.config || {}
                    },
                ], function (renderer, tpl, header, banner, nav, footer, module):string {
                    let data = {
                        header: header,
                        banner: banner,
                        nav: nav,
                        footer: footer,
                        content: module.content,
                        title:module.title,
                        keywords:module.keywords,
                        description:module.description,
                        config:module.config
                    }
                    return renderer.render(tpl, data);
                }));
            }).catch((e)=>{
                reject(e);
            })
        }else{
            reject(new Error('404'));
        }
    }
}
export let instance: Controller = new Controller();